@page "/gameDelete/{id:int}"
@inject IGameService GameService
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage localStore

@if(Token != "" && Message == "")
{
<h1>Eliminar juego</h1>

<div class="page-content mb-2">
    <h6 class="text-center text-danger">
        ¿Está seguro que desea eliminar este juego?
    </h6>
</div>
 <div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-content mb-2">
                <!-- ***** Banner Inicio ***** -->
                <div class="">
                    <div class="row">
                        <!-- **** Form inicio **** -->
            <EditForm Model="@game">
            <!-- ***** Juego Inicio ***** -->
                    <div class="gaming-library">
                        <div class="col-lg-12">
                            <div class="heading-section">
                                <h4>La <em>Libreria</em></h4>
                            </div
                                <div class="item">
                                    <ul>
                                        <li><img src="images/game-03.jpg" alt="" class="templatemo-item"></li>
                                        <li><h4>@game.Nombre</h4><span>Nombre</span></li>
                                        <li><h4>@game.Categoria</h4><span>Categoria</span></li>
                                        <li><h4>@game.Descripcion</h4><span>Descripcion</span></li>
                                        <li><h4>@game.Precio</h4><span>Precio</span></li>
                                                                   <!-- **** Botones inicio ****-->
                            <div class="text-center d-flex justify-content-center mt-1" colspan="2">
                                <div class="main-border-button m-2">
                                    <input class="btn btn-dark" type="submit" value="Eliminar" @onclick="DeleteGame" />
                                </div>
                                <div class="main-border-button m-2">
                                    <input class="btn btn-danger" type="button" value="Cancelar" @onclick="Cancel" />
                                </div>
                            </div>
                            <!-- ****  Botones Fin **** -->
                                </ul>
                            </div>
                            </div>
                    </div>
                <!-- **** Juego Fin **** -->
                    </EditForm>
                        <!-- **** Form Fin **** -->
                    </div>
                </div>
                <!-- ***** Banner Fin ***** -->
            </div>
        </div>
    </div>
</div>
}else{
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="page-content mb-2">
                    <h3 class="text-center py-5">@Message</h3>
                    <div class="nav-item px-3 text-center">
                        <NavLink class="nav-link" href="Login">
                            <button class="btn btn-outline-light btn-lg px-5">Login</button>
                        </NavLink>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }
    private Game game = new Game();
    public string Message { get; set; } = "";
    public string Token { get; set; } = "";
    public DateTime DateToken { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            game = await GameService.GetGameDetails(id);
        }
        await GetJWT();
    }

    protected async Task DeleteGame()
    {
        await GameService.DeleteGame(id);
        NavigationManager.NavigateTo("/");
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

    protected async Task<string> GetJWT()
    {
        try
        {
            var tokenStorage = await localStore.GetAsync<string>("token");
            var fechaStorage = await localStore.GetAsync<DateTime>("fecha");

            if (fechaStorage.Success)
            {
                DateToken = fechaStorage.Value;
                if (DateTime.Compare(DateToken, DateTime.UtcNow) <= 0)
                {
                    await localStore.DeleteAsync("token");
                    await localStore.DeleteAsync("fecha");
                }
            }
            if (tokenStorage.Success)
            {
                Token = tokenStorage.Value;
            }
            else
            {
                Message = "No estás autorizado capo";
            }
        }
        catch (Exception e)
        {
            Message = "No estás autorizado capo";
        }
        return Token;
    }
}