@page "/Login"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage localStore
@inject NavigationManager NavigationManager


@inject HttpClient Http


@if (Token == "" && Message != "")
{
    <section class="vh-100 gradient-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center  h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card bg-dark text-white" style="border-radius: 1rem;">
                        <div class="card-body p-5 text-center">
                            <div class="mb-md-5 mt-md-4 pb-5">
                                <h2 class="fw-bold mb-2 text-white text-uppercase">Login</h2>
                                <p class="text-white-50 mb-5">Ingrese su usuario contraseña!</p>

                                <div class="form-group">
                                    <label for="username">Username</label>
                                    <input type="text" name="username" placeholder="Username" class="form-control" @bind="@Username" />
                                </div>

                                <div class="form-group py-5">
                                    <label for="password">Password</label>
                                    <input type="text" name="password" placeholder="Password" class="form-control" @bind="@Password" />
                                </div>

                                <button class="btn btn-outline-light btn-lg px-5" onclick="@SubmitForm">Ingresar</button>

                                <div class="d-flex justify-content-center text-center mt-4 pt-1">
                                    <a href="#!" class="text-white"><i class="fab fa-facebook-f fa-lg"></i></a>
                                    <a href="#!" class="text-white"><i class="fab fa-twitter fa-lg mx-4 px-2"></i></a>
                                    <a href="#!" class="text-white"><i class="fab fa-google fa-lg"></i></a>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="page-content mb-2">
                    <h3 class="text-center">Se quiere deslogear?</h3>
                    <div class="text-center d-flex justify-content-center mt-1" colspan="2">
                        <div class="main-button">
                            <a class="btn btn-dark" type="submit" value="Logout" @onclick="Logout">Logout</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




}





@code {
    public string Username { get; set; } = "";
    public string Password { get; set; } = "";
    public string Token { get; set; } = "";
    public string Message { get; set; } = "";
    public DateTime DateToken { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetJWT();
        }
        catch (Exception e)
        {
            Message = e.Message;
        }
    }
    protected async Task<string> GetJWT()
    {
        try
        {
            var tokenStorage = await localStore.GetAsync<string>("token");
            var fechaStorage = await localStore.GetAsync<DateTime>("fecha");

            if (fechaStorage.Success)
            {
                DateToken = fechaStorage.Value;
                if (DateTime.Compare(DateToken, DateTime.UtcNow) <= 0)
                {
                    await localStore.DeleteAsync("token");
                    await localStore.DeleteAsync("fecha");
                }
            }
            if (tokenStorage.Success)
            {
                Token = tokenStorage.Value;
            }
            else
            {
                Message = "No estás autorizado capo";
            }
        }
        catch (Exception e)
        {
            Message = "No estás autorizado capo";
        }
        return Token;
    }



    private async Task SubmitForm()
    {
        var user = new User
            {
                Username = Username,
                Password = Password,
            };
        //var response = await Http.PostAsJsonAsync("https://localhost:7206/api/Login", user);//FIJARSE 21:33
        var response = await Http.PostAsJsonAsync("https://tpblazorweb3.azurewebsites.net//api/Login", user);//FIJARSE 21:33
        var content = await response.Content.ReadFromJsonAsync<TokenClass>();

        if (content.TrueSession)
        {
            await localStore.SetAsync("token", content.TokenOrMessage);
            await localStore.SetAsync("fecha", content.Expired);
            NavigationManager.NavigateTo("/");
        }
        Message = content.TokenOrMessage;
    }

    private async Task Logout()
    {
        await localStore.DeleteAsync("token");
        await localStore.DeleteAsync("fecha");
        Message = "No estás autorizado capo";
        Token = "";
    }
}